{
  "swagger": "2.0",
  "info": {
    "description": "This is API-s for Test_Project server.",
    "version": "0.0.1",
    "title": "Swagger Test_Project"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Files",
      "description": "Operations about file"
    }
  ],
  "paths": {
    "/users/:id": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "Get user with files",
        "operationId": "getUserById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updated user",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get users list",
        "description": "Get users list",
        "operationId": "getUsers",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "enum": ["lead", "demo", "client"]
          },
          {
            "name": "birthDate",
            "in": "query",
            "type": "string",
            "format": "yyy-MM-dd"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Create file",
        "description": "Create file",
        "operationId": "postFile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "Invalid file type"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/files/:id": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete file",
        "operationId": "deleteUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Delete file",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "404": {
            "description": "File not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "User":  {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "UUID"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["lead", "demo", "client"]
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserDetail":  {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "UUID"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["lead", "demo", "client"]
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserCreate":  {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "required": true
        },
        "lastName": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        },
        "birthDate": {
          "type": "string",
          "required": true
        },
        "ipAddress": {
          "type": "string",
          "required": true
        },
        "registrationDate": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": ["lead", "demo", "client"],
          "required": true
        },
        "fileIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserUpdate":  {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "required": true
        },
        "lastName": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        },
        "birthDate": {
          "type": "string",
          "required": true
        },
        "ipAddress": {
          "type": "string",
          "required": true
        },
        "registrationDate": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": ["lead", "demo", "client"],
          "required": true
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "File":  {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "UUID"
        },
        "fileName": {
          "type": "string"
        },
        "originalName": {
          "type": "string"
        },
        "mime": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      },
      "xml": {
        "name": "File"
      }
    }
  }
}
